{"version":3,"sources":["Components/GraphQl/query.ts","Components/Home/Home.tsx","Components/DetailPage/SpecAtom.tsx","Components/DetailPage/DetailPage.tsx","App.tsx","index.tsx"],"names":["GET_DETAIL_POK","gql","GET_POKS","Home","data","useQuery","variables","first","className","pokemons","map","el","i","to","id","src","image","alt","name","SpecAtom","title","value","DetailPage","useParams","Card","pokemon","weight","minimum","maximum","height","classification","types","resistant","console","log","weaknesses","evolutions","App","client","ApolloClient","uri","cache","InMemoryCache","ApolloProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ba0ca54.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const GET_DETAIL_POK = gql`\n  query PokemonDetail($id: String) {\n    pokemon(id: $id) {\n      name\n      weight {\n        minimum\n        maximum\n      }\n      height {\n        minimum\n        maximum\n      }\n      image\n      evolutions {\n        id\n      }\n      classification\n      resistant\n      weaknesses\n      types\n    }\n  }\n`;\n\nexport const GET_POKS = gql`\n  query PokemonList($first: Int!) {\n    pokemons(first: $first) {\n      id\n      name\n      image\n    }\n  }\n`;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport \"./Home.scss\";\nimport { GET_POKS } from \"../GraphQl/query\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const { data } = useQuery(GET_POKS, { variables: { first: 60 } });\n\n  return (\n    <div className=\"container-home p-4 \">\n      {data?.pokemons.map((el: { image: string | undefined; name: string; id: string }, i: number) => {\n        return (\n          <Link to={`/detail/${el.id}`}>\n            <div className=\"card pokemon-card p-2\" key={el.id}>\n              <img src={el.image} alt=\"\" />\n              <div className=\"pokemon-name mt-3\">\n                <p>{el.name}</p>\n              </div>\n            </div>\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./DetailPage.scss\";\n\ninterface SpecAtomProps {\n  title: string;\n  value: string | [];\n}\n\nconst SpecAtom: React.FC<SpecAtomProps> = ({ title, value }) => {\n  return (\n    <div className=\"spec\">\n      <div className=\"title p-2\">{title}</div>\n      {typeof value !== \"string\" ? (\n        <div className=\"value p-2\">\n          <ul>\n            {value?.map((el: string) => {\n              return <li>{el}</li>;\n            })}\n          </ul>\n        </div>\n      ) : (\n        <div className=\"value p-2\">{value}</div>\n      )}\n    </div>\n  );\n};\n\nexport default SpecAtom;\n","import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { Card } from \"reactstrap\";\nimport \"./DetailPage.scss\";\nimport SpecAtom from \"./SpecAtom\";\nimport { GET_DETAIL_POK } from \"../GraphQl/query\";\n\nconst DetailPage: React.FC = () => {\n  const { id } = useParams<Record<string, string | undefined>>();\n\n  const { data } = useQuery(GET_DETAIL_POK, { variables: { id: id } });\n\n  return (\n    <Card className=\"container-detail p-2\">\n      <div className=\"image-box \">\n        <h1>{data?.pokemon.name}</h1>\n        <img src={data?.pokemon.image} alt=\"\" />\n      </div>\n\n      <div className=\"spec-box\">\n        <SpecAtom title=\"weight range\" value={`${data?.pokemon.weight.minimum} - ${data?.pokemon.weight.maximum} `} />\n        <SpecAtom title=\"height range\" value={`${data?.pokemon.height.minimum} - ${data?.pokemon.height.maximum} `} />\n        <SpecAtom title=\"Classification\" value={data?.pokemon.classification} />\n        <SpecAtom title=\"Types\" value={data?.pokemon.types} />\n        <SpecAtom title=\"Resistant\" value={data?.pokemon.resistant} />\n        {console.log(data?.pokemon.resistant)}\n        <SpecAtom title=\"Weakness\" value={data?.pokemon.weaknesses} />\n      </div>\n\n      <div className=\"evo-box\">\n        <div className=\"evo \">\n          <SpecAtom\n            title=\"Evolution\"\n            value={\n              data?.pokemon.evolutions !== null\n                ? data?.pokemon.evolutions.map((el: any, i: number) => {\n                    return (\n                      <li>\n                        <Link to={`/detail/${el.id}`}>{i + 1}</Link>\n                      </li>\n                    );\n                  })\n                : \"\"\n            }\n          />\n\n          {/* <p style={{ fontSize: \"1.5rem\" }}>Evolution:</p>\n          <ul>\n            {data?.pokemon.evolutions !== null &&\n              data?.pokemon.evolutions.map((el: any, i: number) => {\n                return (\n                  <li>\n                    <Link to={`/detail/${el.id}`}>{i + 1}</Link>\n                  </li>\n                );\n              })}\n          </ul> */}\n          {console.log(data?.pokemon.evolutions)}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default DetailPage;\n","import React from \"react\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home/Home\";\nimport DetailPage from \"./Components/DetailPage/DetailPage\";\n\nfunction App() {\n  const client = new ApolloClient({\n    uri: \"https://graphql-pokemon2.vercel.app/\",\n    cache: new InMemoryCache(),\n  });\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/detail/:id\">\n            <DetailPage />\n          </Route>\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}